apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pages
    tier: service
  name: pages
  namespace: beta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pages
      tier: service
  strategy: {}
  template:
    metadata:
      labels:
        app: pages
        tier: service
    spec:
      volumes:
      - name: node-dir
        hostPath:
          path: /beta
      containers:
        - image: dockermayur123/pages:monitor
          name: pages
          ports:
            - containerPort: 8080
          env:
            - name: DEBUG
              value: "true"
            - name: LOGGING_FILE_NAME
              value: "[student-name]/logs/app.log"
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB
              value: debug
            - name: LOGGING_LEVEL_ROOT
              value: debug
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "*"
            - name: PAGE_CONTENT
              valueFrom:
                configMapKeyRef:
                  name: pages-config-map
                  key: PAGE_CONTENT
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://pages-mysql/pages
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
          volumeMounts:
            - name: node-dir
              mountPath: /beta
          livenessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              initialDelaySeconds: 15
              periodSeconds: 30
          readinessProbe:
              tcpSocket:
                port: 8080
              initialDelaySeconds: 15
              periodSeconds: 30